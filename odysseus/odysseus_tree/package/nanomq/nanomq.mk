PKGNAME=NANOMQ

${PKGNAME}_VERSION = 0.20.8
${PKGNAME}_SOURCE = $($(PKGNAME)_VERSION).tar.gz
${PKGNAME}_SITE = https://github.com/nanomq/nanomq/archive/refs/tags
${PKGNAME}_LICENSE = MIT
${PKGNAME}_CMAKE_BACKEND=ninja

ifeq ($(BR2_PACKAGE_${PKGNAME}_QUIC), y)
${PKGNAME}_CONF_OPTS += -DNNG_ENABLE_QUIC=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_AWS_BRIDGE), y)
${PKGNAME}_CONF_OPTS += -DENABLE_AWS_BRIDGE=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_TLS), y)
${PKGNAME}_DEPENDENCIES += mbedTLS 
${PKGNAME}_CONF_OPTS += -DNNG_ENABLE_TLS=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_CLIENT_SUITE), n)
${PKGNAME}_CONF_OPTS += -DBUILD_CLIENT=OFF
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_ZMQ_GATEWAY), y)
${PKGNAME}_CONF_OPTS += -DBUILD_ZMQ_GATEWAY=ON	
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_VSOMEIP_GATEWAY), y)
${PKGNAME}_CONF_OPTS += -DBUILD_VSOMEIP_GATEWAY
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_NNG_PROXY), y)
${PKGNAME}_CONF_OPTS += -DBUILD_NNG_PROXY
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_BENCH), y)
${PKGNAME}_CONF_OPTS += -DBUILD_BENCH=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_JWT), y)
${PKGNAME}_CONF_OPTS += -DENABLE_JWT=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_SQLITE), y)
${PKGNAME}_CONF_OPTS += -DNNG_ENABLE_SQLITE=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_STATICLIB), y)
${PKGNAME}_CONF_OPTS += -DBUILD_STATIC_LIB=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_SHAREDLIB), y)
${PKGNAME}_CONF_OPTS += -DBUILD_SHARED_LIB=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_DEBUG), y)
${PKGNAME}_CONF_OPTS += -DDEBUG=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_DASAN), y)
${PKGNAME}_CONF_OPTS += -DASAN=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_LOG), n)
${PKGNAME}_CONF_OPTS += -DNOLOG=1
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_TRACE), y)
${PKGNAME}_CONF_OPTS += -DDEBUG_TRACE=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_RULE_ENGINE), y)
${PKGNAME}_CONF_OPTS += -DENABLE_RULE_ENGINE=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_MYSQL), y)
${PKGNAME}_CONF_OPTS += -DENABLE_MYSQL=ON
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_ACL), n)
${PKGNAME}_CONF_OPTS += -DENABLE_ACL=OFF
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_SYSLONG), n)
${PKGNAME}_CONF_OPTS += -DENABLE_SYSLOG=OFF
endif

ifeq ($(BR2_PACKAGE_${PKGNAME}_TESTS), y)
${PKGNAME}_CONF_OPTS += -D${PKGNAME}_TESTS
endif

$(eval $(cmake-package))
